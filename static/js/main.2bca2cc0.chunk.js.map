{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","monsters","map","monster","SearchBox","placeholder","handleChange","aria-label","type","onChange","App","useState","setMonster","searchField","setSearchField","useEffect","fetch","then","response","json","filteredMonsters","filter","toLowerCase","includes","placeHolder","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAIaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,GAAhC,0BACHC,IAAG,gBAAWJ,EAAMG,MAEtB,oBAAIA,GAAIH,EAAMG,GAAd,SAAmBH,EAAMK,OACzB,4BAAIL,EAAMM,aCPHC,G,MAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAEEP,GAAIO,EAAQP,GACZE,KAAMK,EAAQL,KACdC,MAAOI,EAAQJ,OAHVI,EAAQP,WCPVQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEC,aAAW,gBACXb,UAAU,SACVc,KAAK,SACLH,YAAaA,EACbI,SAAUH,MC2BDI,MAhCf,WAAe,MAGkBC,mBAAS,IAH3B,mBAGNV,EAHM,KAGIW,EAHJ,OAIyBD,mBAAS,IAJlC,mBAINE,EAJM,KAIOC,EAJP,KAMbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GACLW,EAAWX,QAEd,IAEH,IAKMmB,EAAmBnB,EAASoB,QAAO,SAACpB,GAAD,OACvCA,EAASH,KAAKwB,cAAcC,SAASV,EAAYS,kBAGnD,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAW8B,YAAY,kBAAkBlB,aAZxB,SAACmB,GACpBX,EAAeW,EAAEC,OAAOC,UAYtB,cAAC,EAAD,CAAU1B,SAAUmB,QCpBXQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2bca2cc0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.id}?set=set5&size=404x404`}\r\n        alt={`robot-${props.id}`}\r\n      />\r\n      <h2 id={props.id}>{props.name}</h2>\r\n      <p>{props.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card\r\n          key={monster.id}\r\n          id={monster.id}\r\n          name={monster.name}\r\n          email={monster.email}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      aria-label=\"search Robots\"\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nfunction App() {\r\n  // eslint-disable-next-line no-useless-constructor\r\n\r\n  const [monsters, setMonster] = useState([]);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((monsters) => {\r\n        setMonster(monsters);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchField(e.target.value);\r\n  };\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  const filteredMonsters = monsters.filter((monsters) =>\r\n    monsters.name.toLowerCase().includes(searchField.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Monster Rolodex</h1>\r\n      <SearchBox placeHolder=\"Search Monsters\" handleChange={handleChange} />\r\n      <CardList monsters={filteredMonsters} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}